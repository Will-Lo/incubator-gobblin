{
  "type": "record",
  "name": "GaaSObservabilityEventV0",
  "namespace" : "org.apache.gobblin.metrics",
  "fields": [
    {
      "name": "timestamp",
      "type": "long",
      "doc": "Time at which event was created in millis"
    }, {
      "name" : "flowGroup",
      "type" : "string",
      "doc" : "Flow group for the GaaS flow",
      "compliance" : "NONE"
    }, {
      "name" : "flowName",
      "type" : "string",
      "doc" : "Flow name for the GaaS flow",
      "compliance" : "NONE"
    }, {
      "name" : "flowExecutionId",
      "type" : "long",
      "doc" : "Flow execution id for the GaaS flow",
      "compliance" : "NONE"
    }, {
      "name": "jobSentToExecutor",
      "type": "boolean",
      "doc": "Whether or not this job was able to be sent to a job executor."
    }, {
      "name": "lastFlowModificationTime",
      "type": "long",
      "doc": "Timestamp in millis when the flow config was last modified"
    }, {
      "name" : "edgeId",
      "type" : "string",
      "doc" : "Flow edge id, in format <src_node>_<dest_node>_<edge_id>",
      "compliance" : "NONE"
    }, {
      "name": "jobName",
      "type": "string",
      "doc": "The name of the Gobblin job, found in the job template. One edge can contain multiple jobs",
      "compliance" : "NONE"
    }, {
      "name": "jobType",
      "type": {
        "type": "enum",
        "name": "JobType",
        "symbols": [
          "COPY",
          "RETENTION",
          "GOBBLIN"
        ],
        "symbolDocs": {
          "COPY": "Gobblin distcp job",
          "RETENTION": "Gobblin retention job",
          "GOBBLIN": "Any Gobblin job"
        }
      },
      "doc": "Gobblin job type running on GaaS, determined by the compiled job template.",
      "compliance": "NONE"
    }, {
      "name": "jobStatus",
      "type": {
        "type": "enum",
        "name": "JobStatus",
        "symbols": [
          "SUCCEEDED",
          "FAILED",
          "CANCELLED"
        ],
        "doc": "Final job status for this job in the GaaS flow",
        "compliance": "NONE"
      }
    }, {
      "name": "jobStartTime",
      "type": "long",
      "doc": "Start time of the job in millis",
      "compliance": "NONE"
    }, {
      "name": "jobEndTime",
      "type": "long",
      "doc": "Finish time of the job in millis",
      "compliance": "NONE"
    }, {
      "name": "proxyUser",
      "type": "string",
      "doc": "Proxy user (if applicable) that ran the Gobblin job",
      "compliance": "NONE"
    }, {
      "name": "executorLink",
      "type": "string",
      "doc": "Link to where the job is running, currently limited to Azkaban",
      "compliance": "NONE"
    }, {
      "name": "executorId",
      "type": "string",
      "doc": "The ID of the spec executor that ran the job",
      "compliance": "NONE"
    },
    {
      "name": "issues",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "Issue",
          "doc": "Issue describes a specific unique problem in the job or application.\n\nIssue can be generated from log entries, health checks, and other places.",
          "fields": [
            {
              "name": "time",
              "type": {
                "type": "typeref",
                "name": "Timestamp",
                "doc": "Epoch/UNIX time in milliseconds\n\nRepresents the number of milliseconds since the epoch of 1970-01-01T00:00:00Z",
                "ref": "long"
              },
              "doc": "Time when the issue have occurred"
            },
            {
              "name": "severity",
              "type": {
                "type": "enum",
                "name": "IssueSeverity",
                "symbols": [
                  "DEBUG",
                  "INFO",
                  "WARN",
                  "ERROR",
                  "FATAL"
                ]
              },
              "doc": "Severity from DEBUG to FATAL"
            },
            {
              "name": "code",
              "type": "string",
              "doc": "Unique machine-readable code that identifies a specific problem.\n\nIt can be used for making programmatic decisions on how to handle and recover from this issue.\n\nIssues representing the same kind of problem will have the same code.\n"
            },
            {
              "name": "summary",
              "type": "string",
              "doc": "Short, human-readable description of the issue.\n\nIt should focus on what is the root cause of the problem, and what steps the user should do to resolve it."
            },
            {
              "name": "details",
              "type": "string",
              "doc": "Human-readable issue details that can include exception stack trace and additional information about the problem."
            },
            {
              "name": "properties",
              "type": {
                "type": "map",
                "values": "string"
              },
              "doc": "Additional machine-readable properties of the issue.\n"
            }
          ]
        }
      }
    }
    ]
}
