#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build and Publish Docker image
on:
  push:
    # Publish only on `master`
    branches:
      - master

  pull_request:
    branches:
      - master
    paths:
      - 'gobblin-docker/**'
      - '.github/workflows/docker_build_publish.yaml'
  release:
    types: [published, edited]

env:
  IMAGE_NAME: will97/gobblin

jobs:
  setup:
    name: Build docker image tags
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.build_tag.outputs.tag }}
    steps:
      - name: Build Docker Tag
        id: build_tag
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            TAG="${{ env.IMAGE_NAME }}:sha-${${{ github.sha }}:0:7}, ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}, ${{ env.IMAGE_NAME }}:latest"
          else
            TAG="${{ env.IMAGE_NAME }}:sha-${${{ github.sha:0:7 }}:0:7}"
          fi
          echo "tag=$TAG"
          echo "::set-output name=tag::$TAG"
  build_and_push_to_registry:
    name: Build docker images and publish to DockerHub
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Login to GitHub Container Registry
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.CR_PAT }}
      - name: Build Images and Publish
        uses: docker/build-push-action@v2
        with:
          tags: ${{ needs.setup.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          file: ./gobblin-docker/gobblin/alpine-gobblin-latest/Dockerfile
