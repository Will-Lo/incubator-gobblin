#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build and Run Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build repository
    runs-on: ubuntu-latest
    outputs:
      job_matrix: ${{ steps.generate_jobs.outputs.job_matrix }}
      # The below outputs a JSON array of check tasks for each subproject
      #  and uses GitHub Actions magic (::set-output) to set an output
      #  variable
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Stores external dependencies, can be further improved with Gradle 6.1
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Only rebuild cache if build.gradle is changed
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Tests build
        run: |
          ./gradlew --no-daemon clean build -x test -x javadoc -x findbugsMain -x findbugsTest -x checkstyleMain -x checkstyleJmh -x checkstyleTest -Dorg.gradle.parallel=true
      - name: Generate matrix
        id: generate_jobs
        run: |
          ./gradlew --no-daemon -Dorg.gradle.parallel=true -q testMatrix > temp.txt
          TASKS=$(sed -n 's/CI Matrix: //p' temp.txt)
          echo "Tasks: $TASKS"
          echo "::set-output name=job_matrix::{\"gradle_args\": $TASKS}"
  test_coverage:
    runs-on: ubuntu-latest
    name: Generate test coverage
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Only rebuild cache if build.gradle is changed
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Generate code coverage
        run: |
          ./gradlew -PskipTestGroup=disabledOnTravis -Dorg.gradle.parallel=false -DjacocoBuild=1 $GOBBLIN_GRADLE_OPTS jacocoTestCoverage

  static_checks:
    name: Run static checks
    runs-on: ubuntu-latest
    outputs:
      job_matrix: ${{ steps.generate_jobs.outputs.job_matrix }}
      # The below outputs a JSON array of check tasks for each subproject
      #  and uses GitHub Actions magic (::set-output) to set an output
      #  variable
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Stores external dependencies, can be further improved with Gradle 6.1
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Only rebuild cache if build.gradle is changed
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run CheckStyle and FindBugs
        run: |
          ./gradlew --no-daemon -x javadoc findbugsMain checkstyleMain checkstyleTest checkstyleJmh

  run_tests:
    timeout-minutes: 60
    env:
      GOBBLIN_GRADLE_OPTS: "--no-daemon -Dgobblin.metastore.testing.embeddedMysqlEnabled=false -PusePreinstalledMysql=true"
      TEST_GROUP1: "gobbin.yarn,gobblin.runtime,gobblin.cluster,gobblin.compaction,gobblin.util,gobblin.writer"
    strategy:
      matrix: ${{ fromJson(needs.build.outputs.job_matrix) }}
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:5.7.32
        env:
          MYSQL_USER: testUser
          MYSQL_PASSWORD: testPassword
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Verify mysql connection
        run: |
            sudo apt-get install -y mysql-client
            mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "SHOW DATABASES"
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Only rebuild cache if build.gradle is changed
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run tests with (${{matrix.gradle_args}})
        run: ./gradlew -PskipTestGroup=disabledOnTravis $GOBBLIN_GRADLE_OPTS ${{matrix.gradle_args}}
